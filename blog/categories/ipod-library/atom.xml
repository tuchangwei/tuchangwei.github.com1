<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ipod-library | Vale's Blog]]></title>
  <link href="http://tuchangwei.github.io/blog/categories/ipod-library/atom.xml" rel="self"/>
  <link href="http://tuchangwei.github.io/"/>
  <updated>2013-09-17T10:22:51+08:00</updated>
  <id>http://tuchangwei.github.io/</id>
  <author>
    <name><![CDATA[Vale T.]]></name>
    <email><![CDATA[tcwliphone@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to export mp3 from ipod-library]]></title>
    <link href="http://tuchangwei.github.io/blog/2013/06/04/how-to-export-mp3-from-ipod-library/"/>
    <updated>2013-06-04T22:33:00+08:00</updated>
    <id>http://tuchangwei.github.io/blog/2013/06/04/how-to-export-mp3-from-ipod-library</id>
    <content type="html"><![CDATA[<p>Someday, our leader let me export videos, music and photos from Video, Music and Photos in iPad or iPhone. After looked up some articles, I found it was difficult to export mp3.</p>

<p>But, Nowadays, it came true to export mp3, so every format of ipod-library files can be exported.</p>

<p>Now, See how to do it.</p>

<ul>
<li>first, import some frameworks, such as <code>MobileCoreServices.framework</code>,<code>MediaPlayer.framework</code>,<code>AVFoundation.framework</code></li>
<li><p>second, query the media from ipod-library.</p>

<pre><code>  //request videos and music come from system's Videos and Music 
  NSNumber *videoTypeNum = [NSNumber numberWithInteger:MPMediaTypeAny];

  MPMediaPropertyPredicate *videoPredicate = [MPMediaPropertyPredicate predicateWithValue:videoTypeNum forProperty:MPMediaItemPropertyMediaType];

  MPMediaQuery *videoQuery = [[MPMediaQuery alloc] init];
  [videoQuery addFilterPredicate: videoPredicate];
  _mediaItems = [[videoQuery items] copy];
</code></pre></li>
</ul>


<p>*third, convert MPMediaItem to AVURLAsset, generate file name and file extension, then start export,the format of exported file is &ldquo;MOV&rdquo;.Finally, i need use NSFileManager rename the mov to mp3.</p>

<pre><code> MPMediaItem *mediaItem = [_mediaItems objectAtIndex:_count];

 //get the name of the file.
 NSString *songTitle = [mediaItem valueForProperty: MPMediaItemPropertyTitle];

 //convert MPMediaItem to AVURLAsset.
 AVURLAsset *sset = [AVURLAsset assetWithURL:[mediaItem valueForProperty:MPMediaItemPropertyAssetURL]];

//get the extension of the file.
NSString *fileType = [[[[sset.URL absoluteString] componentsSeparatedByString:@"?"] objectAtIndex:0] pathExtension];

//init export, here you must set "presentName" argument to "AVAssetExportPresetPassthrough". If not, you will can't export mp3 correct.
AVAssetExportSession *export = [[AVAssetExportSession alloc] initWithAsset:sset presetName:AVAssetExportPresetPassthrough];

NSLog(@"export.supportedFileTypes : %@",export.supportedFileTypes);
//export to mov format.
export.outputFileType = @"com.apple.quicktime-movie";

export.shouldOptimizeForNetworkUse = YES;

NSString *extension = ( NSString *)UTTypeCopyPreferredTagWithClass(( CFStringRef)export.outputFileType, kUTTagClassFilenameExtension);

NSLog(@"extension %@",extension);
NSString *path = [NSHomeDirectory() stringByAppendingFormat:@"/Documents/%@.%@",songTitle,extension];

NSURL *outputURL = [NSURL fileURLWithPath:path];
export.outputURL = outputURL;
[export exportAsynchronouslyWithCompletionHandler:^{

   if (export.status == AVAssetExportSessionStatusCompleted)
     {
        //then rename mov format to the original format.
         NSFileManager *manage = [NSFileManager defaultManager];

         NSString *mp3Path = [NSHomeDirectory() stringByAppendingFormat:@"/Documents/%@.%@",songTitle,fileType];

         NSError *error = nil;

         [manage moveItemAtPath:path toPath:mp3Path error:&amp;error];

         NSLog(@"error %@",error);

      }
      else
      {
         NSLog(@"%@",export.error);
      }

}];
</code></pre>

<p>Some points you need notice:</p>

<ul>
<li>when you init AVAssetExportSession object, the &ldquo;presetName&rdquo; argument must be &ldquo;AVAssetExportPresetPassthrough&rdquo;.</li>
<li>The &ldquo;outputFileType&rdquo; may be &ldquo;com.apple.quicktime-movie&rdquo;.</li>
</ul>


<p>So easy, doesn&rsquo;t it? Good night.</p>
]]></content>
  </entry>
  
</feed>
